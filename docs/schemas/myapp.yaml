openapi: 3.0.2
info:
  version: 1.0.0
  title: 'django-jsonapi-training example'
  description: >-
    A sample API that uses courses as an example to demonstrate representing
    [JSON:API 1.0](http://jsonapi.org/format) in the OpenAPI 3.0 specification.
#  To externalize jsonapi.yaml, replace `./jsonapi.yaml` with `http://www.columbia.edu/~alan/schemas/common/jsonapi.yaml`.
#  But, more likely you'll just want to bundle this with: `swagger-ui-watcher -b myapp.json myapp.yaml`.
  contact:
    name: Alan Crosswell
    email: alan@columbia.edu
    url: 'http://www.columbia.edu/~alan'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:9123/v1'
paths:
  /courses/:
    get:
      description: Returns a collection of courses
      operationId: find courses
      security:
        - basicAuth: []
        - oauth-dev: [auth-columbia, read]
        - oauth-test: [auth-columbia, read]
        - oauth: [auth-columbia, read]
      parameters:
        # I wish I could pull all these in at once...
        - $ref: './jsonapi.yaml#/components/parameters/include'
        - $ref: './jsonapi.yaml#/components/parameters/sort'
        - $ref: './jsonapi.yaml#/components/parameters/pageSize'
        - $ref: './jsonapi.yaml#/components/parameters/pageNumber'
        # unable to generically represent filter and fields
        - name: 'fields[courses]'
          in: query
          description: 'Sparse Fieldsets: return only the specified course fields'
          required: false
          style: form
          schema:
            type: string
        - name: 'fields[course_terms]'
          in: query
          description: 'Sparse Fieldsets: return only the specified course fields'
          required: false
          style: form
          schema:
            type: string
        # Keyword searches are across these fields:
        # search_fields = ('course_name', 'course_description', 'course_identifier', 'course_number')
        - name: 'filter[search]'
          in: query
          description: keyword search across course_name, course_description, course_identifier, course_number
          required: false
          style: form
          schema:
            type: string
        # enumerate ever single filterset: easy to automate, boring to type by hand;-)
        # usual_rels = ('exact', 'lt', 'gt', 'gte', 'lte', 'in')
        # text_rels = ('icontains', 'iexact', 'contains')
        # 'id': usual_rels,
        - name: 'filter[id]'
          in: query
          description: exact id
          required: false
          style: form
          schema:
            # use an exact schema match here...
            $ref: './jsonapi.yaml#/components/schemas/id'
        - name: 'filter[id.gte]'
          in: query
          description: id greater-than or equal
          required: false
          style: form
          schema:
            # ... but here allow a free-form string for relationship matches
            type: string
        - name: 'filter[id.lte]'
          in: query
          description: id less-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[id.lt]'
          in: query
          description: id less-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[id.gt]'
          in: query
          description: id greater-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[id.in]'
          in: query
          description: id in list
          required: false
          style: form
          schema:
            type: string
        # 'course_name': ('exact', ) + text_rels,
        - name: 'filter[course_name]'
          in: query
          description: exact course_name
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/course_name'
        - name: 'filter[course_name.iexact]'
          in: query
          description: case independent exact course_name 
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/course_name'
        - name: 'filter[course_name.contains]'
          in: query
          description: course_name contains
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_name.icontains]'
          in: query
          description: course_name case independent contains
          required: false
          style: form
          schema:
            type: string
        # 'subject_area_code': usual_rels,
        - name: 'filter[subject_area_code]'
          in: query
          description: subject_area_code equals
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/subject_area_code'
        - name: 'filter[subject_area_code.gte]'
          in: query
          description: subject_area_code greater-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[subject_area_code.lte]'
          in: query
          description: subject_area_code less-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[subject_area_code.lt]'
          in: query
          description: subject_area_code less-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[subject_area_code.gt]'
          in: query
          description: subject_area_code greater-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[subject_area_code.in]'
          in: query
          description: subject_area_code in list
          required: false
          style: form
          schema:
            type: string
        # 'course_description': text_rels + usual_rels,
        - name: 'filter[course_description]'
          in: query
          description: course_description equals
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/course_description'
        - name: 'filter[course_description.gte]'
          in: query
          description: course_description greater-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.lte]'
          in: query
          description: course_description less-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.lt]'
          in: query
          description: course_description less-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.gt]'
          in: query
          description: course_description greater-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.in]'
          in: query
          description: course_description in list
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.iexact]'
          in: query
          description: course_description case independent exact match
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.contains]'
          in: query
          description: course_description contains
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_description.icontains]'
          in: query
          description: course_description case independent contains
          required: false
          style: form
          schema:
            type: string
        # 'course_identifier': text_rels + usual_rels,
        - name: 'filter[course_identifier]'
          in: query
          description: course_identifier equals
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/course_identifier'
        - name: 'filter[course_identifier.gte]'
          in: query
          description: course_identifier greater-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.lte]'
          in: query
          description: course_identifier less-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.lt]'
          in: query
          description: course_identifier less-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.gt]'
          in: query
          description: course_identifier greater-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.in]'
          in: query
          description: course_identifier in list
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.iexact]'
          in: query
          description: course_identifier case independent exact match
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.contains]'
          in: query
          description: course_identifier contains
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_identifier.icontains]'
          in: query
          description: course_identifier case independent contains
          required: false
          style: form
          schema:
            type: string
        # 'course_number': ('exact', ),
        - name: 'filter[course_number]'
          in: query
          description: course_number
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/course_number'
        # 'course_terms__term_identifier': usual_rels,
        - name: 'filter[course_terms.term_identifier]'
          in: query
          description: course_terms.term_identifier equals
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseTermAttributes/properties/term_identifier'
        - name: 'filter[course_terms.term_identifier.gte]'
          in: query
          description: course_terms.term_identifier greater-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_terms.term_identifier.lte]'
          in: query
          description: course_terms.term_identifier less-than or equal
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_terms.term_identifier.lt]'
          in: query
          description: course_terms.term_identifier less-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_terms.term_identifier.gt]'
          in: query
          description: course_terms.term_identifier greater-than
          required: false
          style: form
          schema:
            type: string
        - name: 'filter[course_terms.term_identifier.in]'
          in: query
          description: course_terms.term_identifier in list
          required: false
          style: form
          schema:
            type: string
        # 'school_bulletin_prefix_code': ('exact', 'regex'),
        - name: 'filter[school_bulletin_prefix_code]'
          in: query
          description: exact school_bulletin_prefix_code
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/CourseAttributes/properties/school_bulletin_prefix_code'
        - name: 'filter[school_bulletin_prefix_code.regex]'
          in: query
          description: >-
            regex match school_bulletin_prefix_code.
            Use `filter[school_bulletin_prefix_code.regex]=^$` to find empty codes.
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: course response
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CourseCollection'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: './jsonapi.yaml#/components/schemas/error'
        '403':
          description: not permitted
          content:
            application/vnd.api+json:
              schema:
                $ref: './jsonapi.yaml#/components/schemas/error'
        default:
          description: other response
          content:
            application/vnd.api+json:
              schema:
                $ref: './jsonapi.yaml#/components/schemas/error'
  '/courses/{id}/':
    get:
      description: Returns a single course
      operationId: return course by id
      parameters:
        - name: id
          in: path
          description: ID of course to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: course response
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CourseItem'
  '/courses/{id}/relationships/course_terms':
    get:
      description: Returns a single course's related terms
      parameters:
        - name: id
          in: path
          description: ID of course to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: course relationship response
          content:
            application/vnd.api+json:
              schema:
                $ref: './jsonapi.yaml#/components/schemas/relationships'
  /courses_terms/:
    get:
      description: Returns a collection of course terms
      operationId: find course terms
      parameters:
        - name: sort
          in: query
          description: fields to sort by
          required: false
          style: form
          schema:
            type: string
        - name: 'fields[course_terms]'
          in: query
          description: 'Sparse Fieldsets: return only the specified course fields'
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: course term response
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CourseTermCollection'
  '/course_terms/{id}/':
    get:
      description: Returns a single course term
      operationId: return course term by id
      parameters:
        - name: id
          in: path
          description: ID of course term to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: course term response
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CourseTermItem'
  '/course_terms/{id}/relationships/course':
    get:
      description: Returns a single term's related course
      parameters:
        - name: id
          in: path
          description: ID of term to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: course relationship response
          content:
            application/vnd.api+json:
              schema:
                $ref: './jsonapi.yaml#/components/schemas/relationships'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    oauth-test:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://oauth-test.cc.columbia.edu/as/authorization.oauth2
          tokenUrl: https://oauth-test.cc.columbia.edu/as/token.oauth2
          scopes:
            "auth-columbia": Columbia UNI login
            create: create
            read: read
            update: update
            delete: delete
            openid: disclose your identity
            profile: your user profile
            email: your email address
            https://api.columbia.edu/scope/group: groups you are a member of
            "demo-netphone-admin": Administrative access to netphone resources
    oauth-dev:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://oauth-dev.cuit.columbia.edu:8443/as/authorization.oauth2
          tokenUrl: https://oauth-dev.cuit.columbia.edu:8443/as/token.oauth2
          scopes:
            "auth-columbia": Columbia UNI login
            create: create
            read: read
            update: update
            delete: delete
            openid: disclose your identity
            profile: your user profile
            email: your email address
            https://api.columbia.edu/scope/group: groups you are a member of
            "demo-netphone-admin": Administrative access to netphone resources
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://oauth.cc.columbia.edu/as/authorization.oauth2
          tokenUrl: https://oauth.cc.columbia.edu/as/token.oauth2
          scopes:
            "auth-columbia": Columbia UNI login
            create: create
            read: read
            update: update
            delete: delete
            openid: disclose your identity
            profile: your user profile
            email: your email address
            https://api.columbia.edu/scope/group: groups you are a member of
            "demo-netphone-admin": Administrative access to netphone resources
  schemas:
    CommonItem:
      description: Attributes common to all our schemas.
      type: object
      properties:
        effective_start_date:
          type: string
        effective_end_date:
          type: string
        last_mod_user_name:
          type: string
        last_mod_date:
          type: string
      required:
        - last_mod_user_name
        - last_mod_date
    CourseCollection:
      type: array
      items:
        $ref: '#/components/schemas/CourseItem'
    CourseItem:
      allOf:
        - $ref: './jsonapi.yaml#/components/schemas/resource'
        - type: object
          properties:
            attributes:
              $ref: '#/components/schemas/CourseSchema'
            relationships:
              $ref: '#/components/schemas/CourseRelationships'
    CourseTermCollection:
      type: array
      items:
        $ref: '#/components/schemas/CourseTermItem'
    CourseTermItem:
      allOf:
        - $ref: './jsonapi.yaml#/components/schemas/resource'
        - type: object
          properties:
            attributes:
              $ref: '#/components/schemas/CourseTermSchema'
            relationships:
              $ref: '#/components/schemas/CourseTermRelationships'
    CourseSchema:
      allOf:
        - $ref: '#/components/schemas/CommonItem'
        - $ref: '#/components/schemas/CourseAttributes'
    CourseAttributes:
      type: object
      description: data model for Course
      required:
        - course_name
      properties:
        school_bulletin_prefix_code:
          type: string
          maxLength: 10
        suffix_two:
          type: string
          maxLength: 2
        subject_area_code:
          type: string
          maxLength: 10
        course_number:
          type: string
          maxLength: 10
        course_identifier:
          type: string
          maxLength: 10
          uniqueItems: true
          pattern: "[A-Z]{5}[0-9]{5}"
        course_name:
          type: string
          maxLength: 80
        course_description:
          type: string
    CourseRelationships:
      type: object
      properties:
        course_terms:
          $ref: './jsonapi.yaml#/components/schemas/relationships'
    CourseTermSchema:
      allOf:
        - $ref: '#/components/schemas/CommonItem'
        - $ref: '#/components/schemas/CourseTermAttributes'
    CourseTermAttributes:
      type: object
      description: data model for CourseTerm. 
      properties:
        term_identifier:
          type: string
          maxLength: 14
          description: "example: 20181ACCT7022B"
          pattern: "[0-9]{4}[123][A-Z]{4}[0-9]{4}[A-Z]"
        audit_permitted_code:
          type: integer
          minimum: 0
          default: 0
        exam_credit_flag:
          type: boolean
          default: true
    CourseTermRelationships:
      type: object
      properties:
        courses:
          $ref: './jsonapi.yaml#/components/schemas/relationshipToOne'
